-- The species:

-- First, KaiA and KaiB. They can be bound and receive a name.
-- When triggered on it, they return to their original unbound state.

species A(a)
	= a(x).x.A(a);

species B(b)
	= b(x).x.B(b);


-- Now, the 7 active forms of KaiC. All of them (ex. boundary
-- conditions) can either flip to the inactive side, autonomously 
-- phosphorylate to the next form in the active chain, or bind KaiA.
-- When bound to KaiA, they can either go to the next form or unbind.

species C0(xxx)
	= {act-r@kpf, act-u@kAb0}
	  tau<flip0>.CC0(xxx)
	  + tau<kps>.C1(xxx)
	  + a0<act>.(u.C0(xxx) + r.C1(xxx));

species C1(xxx)
	= {act-r@kpf, act-u@kAb1}
	  tau<flip1>.CC1(xxx)
	  + tau<kps>.C2(xxx)
	  + tau<kdps>.C0(xxx)
	  + a1<act>.(u.C1(xxx) + r.C2(xxx));

species C2(xxx)
	= {act-r@kpf, act-u@kAb2}
	  tau<flip2>.CC2(xxx)
	  + tau<kps>.C3(xxx)
	  + tau<kdps>.C1(xxx)
	  + a2<act>.(u.C2(xxx) + r.C3(xxx));

species C3(xxx)
	= {act-r@kpf, act-u@kAb3}
	  tau<flip3>.CC3(xxx)
	  + tau<kps>.C4(xxx)
	  + tau<kdps>.C2(xxx)
	  + a3<act>.(u.C3(xxx) + r.C4(xxx));

species C4(xxx)
	= {act-r@kpf, act-u@kAb4}
	  tau<flip4>.CC4(xxx)
	  + tau<kps>.C5(xxx)
	  + tau<kdps>.C3(xxx)
	  + a4<act>.(u.C4(xxx) + r.C5(xxx));

species C5(xxx)
	= {act-r@kpf, act-u@kAb5}
	  tau<flip5>.CC5(xxx)
	  + tau<kps>.C6(xxx)
	  + tau<kdps>.C4(xxx)
	  + a5<act>.(u.C5(xxx) + r.C6(xxx));

species C6(xxx)
	= tau<flip6>.CC6(xxx)
	  + tau<kdps>.C5(xxx);


-- The inactive forms. Each comes in 3 variants: just KaiC (CCi),
-- KaiC with two KaiB bound (BCCi) and KaiC with two KaiBs and 
-- two KaiAs (ABCCi). At each of these stages autonomous 
-- (de-)phosphorylation is possible.

species CC0(xxx)
	= {x-y@kkBbh, x-z@kkBbl, af-bf@kvf}
	  tau<kkps>.CC1(xxx)
	  + tau<bflip0>.C0(xxx)
	  + b0<x>.bb0<af>.BCC0(xxx,z,y,bf);

species CC1(xxx)
	= {x-y@kkBbh, x-z@kkBbl, af-bf@kvf}
	  tau<kkps>.CC2(xxx)
	  + tau<kkdps>.CC0(xxx)
	  + tau<bflip1>.C1(xxx)
	  + b1<x>.bb1<af>.BCC1(xxx,z,y,bf);

species CC2(xxx)
	= {x-y@kkBbh, x-z@kkBbl, af-bf@kvf}
	  tau<kkps>.CC3(xxx)
	  + tau<kkdps>.CC1(xxx)
	  + tau<bflip2>.C2(xxx)
	  + b2<x>.bb2<af>.BCC2(xxx,z,y,bf);

species CC3(xxx)
	= {x-y@kkBbh, x-z@kkBbl, af-bf@kvf}
	  tau<kkps>.CC4(xxx)
	  + tau<kkdps>.CC2(xxx)
	  + tau<bflip3>.C3(xxx)
	  + b3<x>.bb3<af>.BCC3(xxx,z,y,bf);

species CC4(xxx)
	= {x-y@kkBbh, x-z@kkBbl, af-bf@kvf}
	  tau<kkps>.CC5(xxx)
	  + tau<kkdps>.CC3(xxx)
	  + tau<bflip4>.C4(xxx)
	  + b4<x>.bb4<af>.BCC4(xxx,z,y,bf);

species CC5(xxx)
	= {x-y@kkBbh, x-z@kkBbl, af-bf@kvf}
	  tau<kkps>.CC6(xxx)
	  + tau<kkdps>.CC4(xxx)
	  + tau<bflip5>.C5(xxx)
	  + b5<x>.bb5<af>.BCC5(xxx,z,y,bf);

species CC6(xxx)
	= {x-y@kkBbh, x-z@kkBbl, af-bf@kvf}
	  tau<kkdps>.CC5(xxx)
	  + tau<bflip6>.C6(xxx)
	  + b6<x>.bb6<af>.BCC6(xxx,z,y,bf);


species BCC0(xxx,s,f,vf)
	= {xs-ys@kkAb, xf-yf@kvf}
	  tau<kkps>.BCC1(xxx,s,f,vf)
	  + f.vf.CC0(xxx)
	  + aa0<xs>.aaa0<xf>.ABCC0(xxx,s,f,vf,ys,yf);

species BCC1(xxx,s,f,vf)
	= {xs-ys@kkAb, xf-yf@kvf}
	  tau<kkps>.BCC2(xxx,s,f,vf)
	  + tau<kkdps>.BCC0(xxx,s,f,vf)
	  + f.vf.CC1(xxx)
	  + aa1<xs>.aaa1<xf>.ABCC1(xxx,s,f,vf,ys,yf);

species BCC2(xxx,s,f,vf)
	= {xs-ys@kkAb, xf-yf@kvf}
	  tau<kkps>.BCC3(xxx,s,f,vf)
	  + tau<kkdps>.BCC1(xxx,s,f,vf)
	  + f.vf.CC2(xxx)
	  + aa2<xs>.aaa2<xf>.ABCC2(xxx,s,f,vf,ys,yf);

species BCC3(xxx,s,f,vf)
	= {xs-ys@kkAb, xf-yf@kvf}
	  tau<kkps>.BCC4(xxx,s,f,vf)
	  + tau<kkdps>.BCC2(xxx,s,f,vf)
	  + f.vf.CC3(xxx)
	  + aa3<xs>.aaa3<xf>.ABCC3(xxx,s,f,vf,ys,yf);

species BCC4(xxx,s,f,vf)
	= {xs-ys@kkAb, xf-yf@kvf}
	  tau<kkps>.BCC5(xxx,s,f,vf)
	  + tau<kkdps>.BCC3(xxx,s,f,vf)
	  + f.vf.CC4(xxx)
	  + aa4<xs>.aaa4<xf>.ABCC4(xxx,s,f,vf,ys,yf);

species BCC5(xxx,s,f,vf)
	= {xs-ys@kkAb, xf-yf@kvf}
	  tau<kkps>.BCC6(xxx,s,f,vf)
	  + tau<kkdps>.BCC4(xxx,s,f,vf)
	  + f.vf.CC5(xxx)
	  + aa5<xs>.aaa5<xf>.ABCC5(xxx,s,f,vf,ys,yf);

species BCC6(xxx,s,f,vf)
	= {xs-ys@kkAb, xf-yf@kvf}
	  tau<kkdps>.BCC5(xxx,s,f,vf)
	  + f.vf.CC6(xxx)
	  + aa6<xs>.aaa6<xf>.ABCC6(xxx,s,f,vf,ys,yf);


species ABCC0(xxx,s,f,vf,ss,ff)
	= tau<kkps>.ABCC1(xxx,s,f,vf,ss,ff)
	  + ss.ff.BCC0(xxx,s,f,vf);

species ABCC1(xxx,s,f,vf,ss,ff)
	= tau<kkps>.ABCC2(xxx,s,f,vf,ss,ff)
	  + tau<kkdps>.ABCC0(xxx,s,f,vf,ss,ff)
	  + ss.ff.BCC1(xxx,s,f,vf);

species ABCC2(xxx,s,f,vf,ss,ff)
	= tau<kkps>.ABCC3(xxx,s,f,vf,ss,ff)
	  + tau<kkdps>.ABCC1(xxx,s,f,vf,ss,ff)
	  + ss.ff.BCC2(xxx,s,f,vf);

species ABCC3(xxx,s,f,vf,ss,ff)
	= tau<kkps>.ABCC4(xxx,s,f,vf,ss,ff)
	  + tau<kkdps>.ABCC2(xxx,s,f,vf,ss,ff)
	  + ss.ff.BCC3(xxx,s,f,vf);

species ABCC4(xxx,s,f,vf,ss,ff)
	= tau<kkps>.ABCC5(xxx,s,f,vf,ss,ff)
	  + tau<kkdps>.ABCC3(xxx,s,f,vf,ss,ff)
	  + ss.ff.BCC4(xxx,s,f,vf);

species ABCC5(xxx,s,f,vf,ss,ff)
	= tau<kkps>.ABCC6(xxx,s,f,vf,ss,ff)
	  + tau<kkdps>.ABCC4(xxx,s,f,vf,ss,ff)
	  + ss.ff.BCC5(xxx,s,f,vf);

species ABCC6(xxx,s,f,vf,ss,ff)
	= tau<kkdps>.ABCC5(xxx,s,f,vf,ss,ff)
	  + ss.ff.BCC6(xxx,s,f,vf);


-- The process:

process Kai = 	[0.56] A(a) ||
		[1.78] B(b) ||
		[0.58] C0(xxx) ||
		[0.0] C1(xxx) ||
		[0.0] C2(xxx) ||
		[0.0] C3(xxx) ||
		[0.0] C4(xxx) ||
		[0.0] C5(xxx) ||
		[0.0] C6(xxx) ||
		[0.0] CC0(xxx) ||
		[0.0] CC1(xxx) ||
		[0.0] CC2(xxx) ||
		[0.0] CC3(xxx) ||
		[0.0] CC4(xxx) ||
		[0.0] CC5(xxx) ||
		[0.0] CC6(xxx) ||
		[0.0] BCC0(xxx,s,f,vf) ||
		[0.0] BCC1(xxx,s,f,vf) ||
		[0.0] BCC2(xxx,s,f,vf) ||
		[0.0] BCC3(xxx,s,f,vf) ||
		[0.0] BCC4(xxx,s,f,vf) ||
		[0.0] BCC5(xxx,s,f,vf) ||
		[0.0] BCC6(xxx,s,f,vf) ||
		[0.0] ABCC0 (xxx,s,f,vf,ss,vf) ||
		[0.0] ABCC1 (xxx,s,f,vf,ss,vf) ||
		[0.0] ABCC2 (xxx,s,f,vf,ss,vf) ||
		[0.0] ABCC3 (xxx,s,f,vf,ss,vf) ||
		[0.0] ABCC4 (xxx,s,f,vf,ss,vf) ||
		[0.0] ABCC5 (xxx,s,f,vf,ss,vf) ||
		[0.0] ABCC6 (xxx,s,f,vf,ss,vf) 

-- network
-- Binding sites of KaiA and KaiB
-- site: a, b; 
-- Different binding sites for KaiA (active forms)
-- site: a0, a1, a2, a3, a4, a5; 
-- Sites for the double binding of KaiB to the inactive forms
-- site: b0, b1, b2, b3, b4, b5, b6,
--       bb0, bb1, bb2, bb3, bb4, bb5, bb6; 
-- Sites for the double binding of KaiA to KaiB-KaiB-KaiC complexes
-- site: aa0, aa1, aa2, aa3, aa4, aa5, aa6,
--       aaa0, aaa1, aaa2, aaa3, aaa4, aaa5, aaa6;  

		:{
		a - a0 @ kAf0,
		a - a1 @ kAf1,
		a - a2 @ kAf2,
		a - a3 @ kAf3,
		a - a4 @ kAf4,
		a - a5 @ kAf5,
		a - aa0 @ kkAf0,
		a - aa1 @ kkAf1,
		a - aa2 @ kkAf2,
		a - aa3 @ kkAf3,
		a - aa4 @ kkAf4,
		a - aa5 @ kkAf5,
		a - aa6 @ kkAf6,
		a - aaa0 @ kvf,
		a - aaa1 @ kvf,
		a - aaa2 @ kvf,
		a - aaa3 @ kvf,
		a - aaa4 @ kvf,
		a - aaa5 @ kvf,
		a - aaa6 @ kvf,
		b - b0 @ kkBf0,
		b - b1 @ kkBf1,
		b - b2 @ kkBf2,
		b - b3 @ kkBf3,
		b - b4 @ kkBf4,
		b - b5 @ kkBf5,
		b - b6 @ kkBf6,
		b - bb0 @ kvf,
		b - bb1 @ kvf,
		b - bb2 @ kvf,
		b - bb3 @ kvf,
		b - bb4 @ kvf,
		b - bb5 @ kvf,
		b - bb6 @ kvf
		};
